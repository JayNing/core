享元模式：
    运用共享技术有效地支持大量细粒度的对象。
应用场景：
    如果一个应用程序使用了大量的对象，而大量的这些对象造成了很大的存储开销时，就应该考虑使用；还有就是对象的大多数状态
    可以外部状态，如果删除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象，此时可以考虑使用享元模式。
内部状态：在享元对象内部并且不会随环境改变而改变的共享部分，称为享元对象的内部状态。
外部状态：在享元对象内部，而随环境改变而改变的共享部分，称为享元对象的外部状态。

享元模式的实际应用：1、静态字符串string的创建，如果有，会直接使用已有的引用，不会创建新字符串对象；2、围棋的棋子，棋子的颜色
是内部状态，而各个棋子的位置是外部状态。利用享元模式来处理棋子，只需要两个实例，不需要每个位置都创建棋子对象。

demo案例：做外包项目，帮别人建站。建立网站相同的流程，类似的需求和代码，当建立一个新类型的网站时，原本需要把之前的代码copy
出来；当要建立的网站很多的时候，假如100个，那么同样的代码要复制100遍。如果一个网站是一个实例，100个网站就是100个实例。这个
时候，可以通过享元模式，减少实例的创建。